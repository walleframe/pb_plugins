// Code generated by {{.ToolName}} {{.Version}}. DO NOT EDIT.
package {{.Package}} {{$obj := .}}

$Import-Packages$

{{range $i,$msg := .Msgs}}

{{- range $i,$field := $msg.Fields }}{{if $field.Map}}{{$map := $field.Map}}
type {{$msg.Type}}_{{$field.Name}}Map {{$map.Type}}
func (field {{$msg.Type}}_{{$field.Name}}Map) MarshalZerologObject(e *zerolog.Event) {
	for k,v := range field {
		e.{{$map.ValFunc}}({{call $map.KeyFunc "k"}}, {{call $field.Value "v"}})
	}
}
{{end}}{{end}}

func (obj *{{$msg.Type}}) MarshalZerologObject(e *zerolog.Event) { {{- range $i,$field := $msg.Fields }}{{ if $field.Map}}
	e.{{$field.Func}}("{{$field.Key}}", {{$msg.Type}}_{{$field.Name}}Map(obj.{{$field.Name}})){{else}}
	e.{{$field.Func}}("{{$field.Key}}", {{call $field.Value "obj"}}){{end -}}
{{end}}
}

type {{$msg.Type}}Array []*{{$msg.Type}}
func (obj {{$msg.Type}}Array)MarshalZerologArray(a *zerolog.Array) {
	for _,v := range obj {
		a.Object(v)
	}
}
{{end}}